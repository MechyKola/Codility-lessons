using System;
using System.Collections.Generic;

class Solution {
    public int solution(int[] A) {
        int len = A.Length;
        int count = 0;
        int candidate;
        int equi = 0;
        
        int left = 0;
        int right = 0;
        
        Stack<int> leader = new Stack<int>();
        
        for(int i = 0; i < len; i++)
        {
            if(leader.Count == 0)
            {
                leader.Push(A[i]);
            }
            else
            {
                if(leader.Peek() != A[i])
                {
                    leader.Pop();
                }
                else
                {
                    leader.Push(A[i]);
                }
            }
        }
        
        if(leader.Count != 0)
        {
            candidate = leader.Peek();
        }
        else
        {
            return 0;
        }
        
        for(int i = 0; i < len; i++)
        {
            if(A[i] == candidate)
            {
                count++;
            }
        }
        
        right = count;
        
        if(count <= len/2)
        {
            return 0;
        }
        
        for(int i = 0; i < len - 1; i++)
        {
            if(A[i] == candidate)
            {
                left++;
                right--;                
            }
            
            if( left>((i+1)/2) && right>((len-i-1)/2) )
            {
                equi++;
            }
        }
    
    return equi;
    }
}
