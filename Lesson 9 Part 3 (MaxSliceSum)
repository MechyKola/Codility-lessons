using System;

class Solution {
    public int solution(int[] A) {
        
        // get length of array
        int lengthOfA = A.Length;
        
        // declare variable storing the maximum
        // however initialise with minimum
        long maxSum = -1000000;
        
        // create array of length A,
        // containing the largest sum
        // of the value to the left of the
        // value and including the value
        long[] maxOnLeft = new long[lengthOfA];
        
        
        // declare various useful variables
        long counter = 0;
        long lastNegativeValue = 0;
        
        
        // populate the array of values on the right
        
        // this will set the value to the maximum sum
        // on the left of the array
        
        // run actual loop
        for( int i = 0; i < lengthOfA; i++) {
            
            
            // if the counter is lower than
            // previous minimum then
            // record the value so that it
            // can be subtracted later
            if (counter < lastNegativeValue) {
                
                // store value
                lastNegativeValue = counter;
            }
            
            // add value to counter
            counter += A[i];
            
            
            // set the new maxOnLeft value to be
            // current counter value take away any
            // previous negative sums
            maxOnLeft[i] = counter - lastNegativeValue;
            
            
            
            // see if maxOnLeft larger than previous
            // maxSum then update maxSum
            if (maxOnLeft[i] > maxSum) {
                
                // update maximum sum
                maxSum = maxOnLeft[i];
            }
            
        }
        
        
        // return the maximum sum,
        // converting to int
        return Convert.ToInt32(maxSum);
    }
}
